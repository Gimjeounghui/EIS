<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.kun.eis.user.member.service.MemberMapper">
	<select id="selectListMember" resultType="memberVO"	parameterType="memberVO">

		SELECT
		BOARD2.*
		FROM(
		SELECT
		COUNT(*) OVER() AS totalRecordCount,
		BOARD1.*
		FROM(
		SELECT
		ROW_NUMBER() OVER (ORDER BY m_created_ate DESC) AS rnum

		,m_email
		,m_name
		,m_pw
		,m_phone
		,m_created_ate


		FROM MEMBER
		) BOARD1
		) BOARD2
		WHERE BOARD2.RNUM BETWEEN #{start} AND #{end}

	</select>

	<insert id="registMember" parameterType="memberVO">
		insert into MEMBER (m_email, m_name, m_pw, m_phone, m_permiss, m_type,
		m_created_ate, m_updated_ate, m_deleted_ate)
		values(#{mEmail}, #{EName}, #{mPw}, #{mPhone}, 0, 0, NOW(), NOW(), NOW())
	</insert>

	<update id="updateMember" parameterType="memberVO">
		UPDATE MEMBER 
		SET m_name = #{mName}, m_phone = #{mPhone}, m_pw = #{mPw}, m_updated_ate = NOW()
		WHERE m_email = #{mEmail}
	</update>


	<delete id="deleteMember" parameterType="memberVO">
		delete
		from MEMBER 
		where m_email = #{mEmail}
	</delete>

	<!-- 23.05.09 memberImageInsert 수정 1차 - memberImageInsert 
	<insert id= "memberImageInsert"> 
	<selectKey resultType = "String" keyProperty="m_email" order ="BEFORE"> 
	select 
	from member 
	where m_email = #{mEmail} 
	</selectKey> 
	insert into member_upload 
		( m_photo, m_photo_path, m_email) values(#{m_photo},#{m_photo_path},#{mEmail}) 
		</insert> -->


	<insert id="imageInsertMember" parameterType="memberVO">
		<selectKey resultType="String" keyProperty="m_email" order="BEFORE">
			select max(m_email) as m_email 
			from MEMBER 
			where m_email = #{mEmail}
		</selectKey>
		insert INTO MEMBER_UPLOAD ( m_photo, m_photo_path, m_email) 
		values(#{m_photo},#{m_photo_path},#{mEmail})
	</insert>

	<update id="updateImgMember" parameterType="memberVO">
		update MEMBER_UPLOAD set m_photo_path = #{m_photo_path},m_photo = #{m_photo}
		where m_email = #{mEmail}
	</update>

	<update id="permissMember" parameterType="memberVO">
		update MEMBER set m_permiss = #{m_permiss}
		where m_email = #{mEmail}

	</update>

	<!-- 23.05.04 memberDetail workVO, projectVO 완성 후 Work, Project Join 예정 
		w_num, p_num 연결 예정 23.05.09 memberWork 생성, memberPorject .. 생성 완료 -->
	<select id="detailMember" resultType="memberVO" parameterType="memberVO">
		select *
		from MEMBER
		where m_email = #{mEmail}
	</select>

	<select id="workMember" resultType="memberVO" parameterType="memberVO">
		select w_title 
		FROM MEMBER m INNER JOIN WORK w on (m.m_email = w.m_email)
		WHERE m_email = #{mEmail}
		order by w.w_created_ate
		LIMIT 3
	</select>


	<select id="projectMember" resultType="memberVO" parameterType="memberVO">
		SELECT p_title
		FROM MEMBER m INNER JOIN PROJECT_EMPLOYEE p ON (m.m_email = p.m_email)
		WHERE p.p_emp_no LIKE #{mEmail}
		ORDER BY p.p_emp_no
		LIMIT 3
	</select>

	<select id="emailCheck" resultType="int">
		SELECT count(*)
		FROM MEMBER
		WHERE m_email = #{mEmail}
	</select>

	 <select id="login" resultType="memberVO" parameterType="memberVO">
        select m.m_email, m.m_name, m.m_pw, m_up.m_photo_path, m_up.m_photo
        from MEMBER m right join MEMBER_UPLOAD m_up on m.m_email = m_up.m_email
        where m.m_email = #{mEmail} and m.m_pw = #{mPw}
    </select>

	<select id="isLogin" resultType="int">
		SELECT count(*)
		FROM MEMBER
		WHERE m_email = #{mEmail} and m_pw = #{mPw}
	</select>

</mapper>